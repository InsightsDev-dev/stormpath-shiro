addons:
  artifacts:
    debug: true
    paths:
    - libs.zip
    - build.zip
    - testbuild.zip
    - jacoco.exec
    target_paths: ac9644c3-5f52-4285-812b-56281a374358
after_success:
- ' wget --content-disposition http://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.7.7.201606060606/jacoco-0.7.7.201606060606.zip '
- ' unzip -o jacoco-0.7.7.201606060606.zip  '
- ' cd lib  '
- ' mv * ../  '
- ' cd ..  '
- ' chmod a+x *  '
- ' cd $PWD  '
- ' rm  ''jacoco.exec'''
- ' export JAVA_TOOL_OPTIONS=-javaagent:$PWD/jacocoagent.jar=destfile=$PWD/jacoco.exec,append=true  '
- ' travis_wait 720 mvn  test -Dmaven.test.failure.ignore=true -Djacoco.skip=true
  -Dcobertura.skip=true -Dmaven.clover.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true
  -Drat.ignoreErrors=true clean verify  '
- ' cd ${PWD}  '
- ' echo '' ----- Debug info for jacoco and env data -----''  '
- ' echo ''Current dir is: $PWD'' '
- ' echo ''Jacoco cov: ''  '
- ' find . -name ''*.exec''  '
- ' echo '' ----------------------------------------------'' '
- ./df-build.sh
before_install:
- export PROJECT_VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}'
  --non-recursive exec:exec)
- export BUILD_DOCS="$([ $TRAVIS_JDK_VERSION == 'oraclejdk8' ] && echo 'true')"
- export IS_RELEASE="$([ ${PROJECT_VERSION/SNAPSHOT} == PROJECT_VERSION ] && echo
  'true')"
branches: ''
cache:
  directories:
  - $HOME/.m2
env:
  global:
  - STORMPATH_API_KEY_ID=CN5D6CEHMI7M1HVSBW74N626X
  - secure: W7X8AjOaQRmrzfZ3G2wn5rxld1aw5osYLKWY98U6hU5jy148HLzJ1s+v/RdydAAB2d4xuYvr5WrUEaF/eHJ4AF0zBNDwst84VHUxT3yTzBFVHgnd/rbn8AMpITQtwIiXEr+hMK3cAVXwZtZ+mLmkllyf48Myk75QDxwwJnKS2UA=
install:
- test -z "$BUILD_DOCS" || pip -q install --user sphinx
jdk:
- oraclejdk8
language: java
notifications:
  webhooks:
    on_failure: always
    on_start: always
    on_success: always
    urls:
    - http://insights-portal-insights-service-webserver-dev.public-swarm.devfactory.com/travisWebHookListener?build_id=ac9644c3-5f52-4285-812b-56281a374358
script:
- test -n "$BUILD_DOCS" || mvn install
- test -z "$BUILD_DOCS" || mvn install -Psphinx-docs -Pdocs && mvn javadoc:javadoc
  javadoc:aggregate -Paggregate-docs
# Modified by Insights Service at 2016-11-27 19:17:07.448476
